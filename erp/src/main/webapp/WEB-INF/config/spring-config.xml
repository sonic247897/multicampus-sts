<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<!-- 정적 리소스를 연결하는 부분  -->
	<!-- <resources mapping="/resources/**" location="/resources/" /> -->
	<!-- mapping: 요청path, location: 실제 물리적 위치 -->
	<resources mapping="/images/**" location="/WEB-INF/static/images/" />
	<resources mapping="/common/**" location="/WEB-INF/static/common/" />
	
	<!-- tiles설정 파일을 읽어서 등록한 대로 뷰를 만들어 낼 수 있도록 등록 -->
	<!-- 1. tiles설정 파일을 읽어올 수 있도록 설정 파일을 등록 -->
	<beans:bean id="tilesConfigurer"
		class="org.springframework.web.servlet.view.tiles3.TilesConfigurer">
		<beans:property name="definitions">
			<beans:list>
				<!-- WEB-INF 밑의 -tiles로 끝나는 xml파일을 전부 설정파일로 인식  -->
				<!-- 테이블에 따라 tiles설정파일을 따로 만들어서 각자 다른 폴더에 관리 가능 -->
				<!-- 전체를 읽고 파싱을 해서 한번에 설정을 정리한다!! -->
				<!-- **: 폴더, *: 파일  -->
				<beans:value>/WEB-INF/**/*-tiles.xml</beans:value>
			</beans:list>
		</beans:property>
	</beans:bean>
	
	<!-- 2. tiles프레임워크 기반으로 뷰를 만들 수 있도록 ViewResolver 등록 -->
	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/" /><!-- 뷰 말고 WEB-INF에서 찾을 수 있도록 설정 -->
		<beans:property name="suffix" value=".jsp" />
		<!-- 팝업창을 만들때도 사용하므로 지우지x -->
		<beans:property name="order" value="2"/>
	</beans:bean>
	
	<beans:bean id="tilesViewResolver"
		class="org.springframework.web.servlet.view.UrlBasedViewResolver">
		<beans:property name="viewClass" 
			value="org.springframework.web.servlet.view.tiles3.TilesView"/>
		<!-- 우선순위 1순위 -->
		<beans:property name="order" value="1"/>
	</beans:bean>	
	
	<!-- 어노테이션을 하기 위해 빈을 찾을 패키지 등록 -->
	<context:component-scan base-package="multi"/> <!-- 앞에 전부 multi 붙여서 작업 -->
	<context:component-scan base-package="main"/>	
	
	
	
</beans:beans>
